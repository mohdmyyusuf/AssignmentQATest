<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="7" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="43717" started-at="2021-06-22T23:43:17 IST" finished-at="2021-06-22T23:44:01 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="43717" started-at="2021-06-22T23:43:17 IST" finished-at="2021-06-22T23:44:01 IST">
      <class name="com.assign.qa.base.testcases.MainPageTests">
        <test-method status="PASS" signature="setUpTests()[pri:0, instance:com.assign.qa.base.testcases.MainPageTests@38bc8ab5]" name="setUpTests" is-config="true" duration-ms="16398" started-at="2021-06-22T23:43:24 IST" finished-at="2021-06-22T23:43:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTests -->
        <test-method status="PASS" signature="verifyHomePageTitleTest()[pri:1, instance:com.assign.qa.base.testcases.MainPageTests@38bc8ab5]" name="verifyHomePageTitleTest" duration-ms="12" started-at="2021-06-22T23:43:40 IST" finished-at="2021-06-22T23:43:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHomePageTitleTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.assign.qa.base.testcases.MainPageTests@38bc8ab5]" name="tearDown" is-config="true" duration-ms="648" started-at="2021-06-22T23:43:40 IST" finished-at="2021-06-22T23:43:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUpTests()[pri:0, instance:com.assign.qa.base.testcases.MainPageTests@38bc8ab5]" name="setUpTests" is-config="true" duration-ms="7744" started-at="2021-06-22T23:43:41 IST" finished-at="2021-06-22T23:43:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTests -->
        <test-method status="PASS" signature="verifyDataCreated()[pri:2, instance:com.assign.qa.base.testcases.MainPageTests@38bc8ab5]" name="verifyDataCreated" duration-ms="3200" started-at="2021-06-22T23:43:48 IST" finished-at="2021-06-22T23:43:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDataCreated -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.assign.qa.base.testcases.MainPageTests@38bc8ab5]" name="tearDown" is-config="true" duration-ms="650" started-at="2021-06-22T23:43:52 IST" finished-at="2021-06-22T23:43:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUpTests()[pri:0, instance:com.assign.qa.base.testcases.MainPageTests@38bc8ab5]" name="setUpTests" is-config="true" duration-ms="4899" started-at="2021-06-22T23:43:52 IST" finished-at="2021-06-22T23:43:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTests -->
        <test-method status="PASS" signature="verifyDataClassification()[pri:3, instance:com.assign.qa.base.testcases.MainPageTests@38bc8ab5]" name="verifyDataClassification" duration-ms="3318" started-at="2021-06-22T23:43:57 IST" finished-at="2021-06-22T23:44:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDataClassification -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.assign.qa.base.testcases.MainPageTests@38bc8ab5]" name="tearDown" is-config="true" duration-ms="662" started-at="2021-06-22T23:44:00 IST" finished-at="2021-06-22T23:44:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.assign.qa.base.testcases.MainPageTests -->
      <class name="TestCasesGetReqs.GetPosts">
        <test-method status="PASS" signature="getCommentsForPosts()[pri:0, instance:TestCasesGetReqs.GetPosts@6b9651f3]" name="getCommentsForPosts" duration-ms="4725" started-at="2021-06-22T23:43:17 IST" finished-at="2021-06-22T23:43:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCommentsForPosts -->
        <test-method status="FAIL" signature="getPhotos()[pri:0, instance:TestCasesGetReqs.GetPosts@6b9651f3]" name="getPhotos" duration-ms="451" started-at="2021-06-22T23:43:22 IST" finished-at="2021-06-22T23:43:23 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path id doesn't match.
Expected: <4>
  Actual: <3>
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path id doesn't match.
Expected: <4>
  Actual: <3>

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:261)
at io.restassured.specification.ResponseSpecification$body$1.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:108)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:298)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)
at TestCasesGetReqs.GetPosts.getPhotos(GetPosts.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPhotos -->
        <test-method status="PASS" signature="getPosts()[pri:0, instance:TestCasesGetReqs.GetPosts@6b9651f3]" name="getPosts" duration-ms="252" started-at="2021-06-22T23:43:23 IST" finished-at="2021-06-22T23:43:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPosts -->
        <test-method status="PASS" signature="getUsers()[pri:0, instance:TestCasesGetReqs.GetPosts@6b9651f3]" name="getUsers" duration-ms="271" started-at="2021-06-22T23:43:23 IST" finished-at="2021-06-22T23:43:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUsers -->
      </class> <!-- TestCasesGetReqs.GetPosts -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
